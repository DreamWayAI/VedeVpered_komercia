import { useState } from 'react';
import Head from 'next/head';
import RoomForm from '../components/RoomForm';

export default function Home() {
  const [rooms, setRooms] = useState([{ id: 1, area: '', layers: 4, type: 'standard' }]);
  const [country, setCountry] = useState('–£–∫—Ä–∞—ó–Ω–∞');
  const [currency, setCurrency] = useState('–≥—Ä–Ω');
  const [customCountry, setCustomCountry] = useState('');
  const [discount, setDiscount] = useState(20);
  const [preview, setPreview] = useState('');

  const handleAddRoom = () => setRooms([...rooms, { id: Date.now(), area: '', layers: 4, type: 'standard' }]);
  const handleChangeRoom = (index, updated) => {
    const newRooms = [...rooms];
    newRooms[index] = { ...newRooms[index], ...updated };
    setRooms(newRooms);
  };

  const generatePreview = () => {
    let html = `<h2 style='color:#b5331b'>–ö–æ–º–µ—Ä—Ü—ñ–π–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è</h2>`;
    html += `<p>–ö—Ä–∞—ó–Ω–∞: <b>${country === '–Ü–Ω—à–µ' ? customCountry : country}</b><br>–í–∞–ª—é—Ç–∞: <b>${currency}</b><br>–ó–Ω–∏–∂–∫–∞: <b>${discount}%</b></p>`;
    rooms.forEach((room, i) => {
      const weight = parseFloat(room.area || 0) * (room.layers * 0.1);
      const pricePerKg = currency === '–≥—Ä–Ω' ? 1512 : currency === '—î–≤—Ä–æ' ? 34.56 : 38;
      const total = weight * pricePerKg;
      const final = total * (1 - discount / 100);
      html += `<h3>–ü—Ä–∏–º—ñ—â–µ–Ω–Ω—è ‚Ññ${i + 1}</h3>
        <p>–ü–ª–æ—â–∞: ${room.area} –º¬≤<br>–ö—ñ–ª—å–∫—ñ—Å—Ç—å —à–∞—Ä—ñ–≤: ${room.layers}<br>–¢–∏–ø: ${room.type}</p>
        <table border='1' cellpadding='8' cellspacing='0' style='width:100%;margin-top:10px'>
        <tr><th>–ú–∞—Ç–µ—Ä—ñ–∞–ª</th><th>–í–∏—Ç—Ä–∞—Ç–∞, –∫–≥</th><th>–¶—ñ–Ω–∞/${currency}</th><th>–°—É–º–∞ ${currency}</th></tr>
        <tr><td>–ï–º–∞–ª—å PoliBest 911</td><td>${weight.toFixed(1)}</td><td>${pricePerKg}</td><td>${total.toFixed(2)}</td></tr>
        </table>
        <p><b>–ü—ñ—Å–ª—è –∑–Ω–∏–∂–∫–∏: ${final.toFixed(2)} ${currency}</b></p>`;
    });
    html += `<p>–ó –ø–æ–≤–∞–≥–æ—é,<br>–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä<br>–¢–û–í ¬´–í–ï–î–ï–í–ü–ï–†–ï–î¬ª</p>`;
    setPreview(html);
  };

  return (
    <>
      <Head><title>PoliBest Generator</title></Head>
      <div className="container">
        <h1>–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–º–µ—Ä—Ü—ñ–π–Ω–æ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó PoliBest 911</h1>
        <div className="form-block">
          <label>–ö—Ä–∞—ó–Ω–∞:</label>
          <select value={country} onChange={e => setCountry(e.target.value)}>
            <option>–£–∫—Ä–∞—ó–Ω–∞</option><option>–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω</option><option>–ü–æ–ª—å—â–∞</option><option>–ù—ñ–º–µ—á—á–∏–Ω–∞</option>
            <option>–ú–æ–ª–¥–æ–≤–∞</option><option>–ì—Ä—É–∑—ñ—è</option><option>–õ–∏—Ç–≤–∞</option><option>–†—É–º—É–Ω—ñ—è</option><option>–Ü–Ω—à–µ</option>
          </select>
          {country === '–Ü–Ω—à–µ' && (
            <input type="text" placeholder="–í–∞—à–∞ –∫—Ä–∞—ó–Ω–∞" value={customCountry} onChange={e => setCustomCountry(e.target.value)} />
          )}
          <label>–í–∞–ª—é—Ç–∞:</label>
          <select value={currency} onChange={e => setCurrency(e.target.value)}>
            <option value="–≥—Ä–Ω">–ì—Ä–∏–≤–Ω—è</option><option value="—î–≤—Ä–æ">–Ñ–≤—Ä–æ</option><option value="–¥–æ–ª–∞—Ä">–î–æ–ª–∞—Ä</option>
          </select>
          <label>–ó–Ω–∏–∂–∫–∞ (%):</label>
          <input type="number" value={discount} onChange={e => setDiscount(Number(e.target.value))} />
        </div>

        {rooms.map((room, index) => (
          <RoomForm key={room.id} index={index} data={room} onChange={handleChangeRoom} />
        ))}
        <button onClick={handleAddRoom}>‚ûï –î–æ–¥–∞—Ç–∏ –ø—Ä–∏–º—ñ—â–µ–Ω–Ω—è</button>
        <div className="btn-block">
          <button onClick={generatePreview}>üîç –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é</button>
        </div>
        {preview && <div className="preview" dangerouslySetInnerHTML={{ __html: preview }} />}
      </div>
    </>
  );
}