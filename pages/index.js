import { useState } from 'react';
import Head from 'next/head';
import RoomForm from '../components/RoomForm';
import '../styles/globals.css';

export default function Home() {
  const [rooms, setRooms] = useState([{ id: 1, area: '', layers: 4, type: 'standard' }]);
  const [country, setCountry] = useState('–£–∫—Ä–∞—ó–Ω–∞');
  const [currency, setCurrency] = useState('–≥—Ä–Ω');
  const [customCountry, setCustomCountry] = useState('');
  const [preview, setPreview] = useState('');

  const handleAddRoom = () => setRooms([...rooms, { id: Date.now(), area: '', layers: 4, type: 'standard' }]);
  const handleChangeRoom = (index, updated) => {
    const newRooms = [...rooms];
    newRooms[index] = { ...newRooms[index], ...updated };
    setRooms(newRooms);
  };

  const generatePreview = () => {
    let html = `<h2>–ö–æ–º–µ—Ä—Ü—ñ–π–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è</h2>`;
    html += `<p>–ö—Ä–∞—ó–Ω–∞: ${country === '–Ü–Ω—à–µ' ? customCountry : country}, –í–∞–ª—é—Ç–∞: ${currency}</p>`;
    rooms.forEach((room, i) => {
      const weight = parseFloat(room.area) * (room.layers * 0.1);
      html += `<h3>–ü—Ä–∏–º—ñ—â–µ–Ω–Ω—è ‚Ññ${i + 1}</h3>
        <p>–ü–ª–æ—â–∞: ${room.area} –º¬≤<br>–ö—ñ–ª—å–∫—ñ—Å—Ç—å —à–∞—Ä—ñ–≤: ${room.layers}<br>–¢–∏–ø: ${room.type}</p>
        <p>–í–∏—Ç—Ä–∞—Ç–∞: ${weight.toFixed(2)} –∫–≥</p>`;
    });
    html += `<p>–ó –ø–æ–≤–∞–≥–æ—é,<br>–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä<br>–¢–û–í ¬´–í–ï–î–ï–í–ü–ï–†–ï–î¬ª</p>`;
    setPreview(html);
  };

  return (
    <>
      <Head><title>PoliBest Generator</title></Head>
      <div className="container">
        <h1>–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–º–µ—Ä—Ü—ñ–π–Ω–æ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó PoliBest 911</h1>
        <div className="form-block">
          <label>–ö—Ä–∞—ó–Ω–∞:</label>
          <select value={country} onChange={e => setCountry(e.target.value)}>
            <option>–£–∫—Ä–∞—ó–Ω–∞</option><option>–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω</option><option>–ü–æ–ª—å—â–∞</option>
            <option>–ù—ñ–º–µ—á—á–∏–Ω–∞</option><option>–ú–æ–ª–¥–æ–≤–∞</option><option>–ì—Ä—É–∑—ñ—è</option>
            <option>–õ–∏—Ç–≤–∞</option><option>–†—É–º—É–Ω—ñ—è</option><option>–Ü–Ω—à–µ</option>
          </select>
          {country === '–Ü–Ω—à–µ' && (
            <input type="text" placeholder="–í–∞—à–∞ –∫—Ä–∞—ó–Ω–∞" value={customCountry} onChange={e => setCustomCountry(e.target.value)} />
          )}
          <label>–í–∞–ª—é—Ç–∞:</label>
          <select value={currency} onChange={e => setCurrency(e.target.value)}>
            <option value="–≥—Ä–Ω">–ì—Ä–∏–≤–Ω—è</option><option value="—î–≤—Ä–æ">–Ñ–≤—Ä–æ</option><option value="–¥–æ–ª–∞—Ä">–î–æ–ª–∞—Ä</option>
          </select>
        </div>

        {rooms.map((room, index) => (
          <RoomForm key={room.id} index={index} data={room} onChange={handleChangeRoom} />
        ))}
        <button onClick={handleAddRoom}>‚ûï –î–æ–¥–∞—Ç–∏ –ø—Ä–∏–º—ñ—â–µ–Ω–Ω—è</button>
        <div className="btn-block">
          <button onClick={generatePreview}>üîç –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é</button>
        </div>

        {preview && <div className="preview" dangerouslySetInnerHTML={{ __html: preview }} />}
      </div>
    </>
  );
}